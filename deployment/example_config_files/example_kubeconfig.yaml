# This is an example kubeconfig file. It is not functional, just something to reference.
# After installing kubectl, your version of this file can be found in ~/.kube/config
# Note that all the minikube entries are added automatically by minikube on install (or at least should be).

apiVersion: v1

# There are three main components of a kubeconfig file: clusters, contexts, and users.
clusters:
- cluster: # All cluster information can be obtained from the cloud provider. In the case of Aliyun, it can be found in 'console>ACK>cluster>connection information'
    certificate-authority-data: ca-cert goes here
    server: ip goes here
  name: dev-team-cluster # This can be set to anything. It's used by contexts below to select which cluster to connect to.
- cluster:
    certificate-authority: /home/loratech/.minikube/ca.crt
    extensions:
    - extension:
        last-update: date-time
        provider: minikube.sigs.k8s.io
        version: v1.23.0
      name: cluster_info
    server: ip
  name: minikube

# Contexts allow for selecting which cluster to connect to, which namespace to use, and which user to access as in one simple command. They're just for convenience.
contexts:
- context:
    cluster: minikube
    extensions:
    - extension:
        last-update: date-time
        provider: minikube.sigs.k8s.io
        version: v1.23.0
      name: context_info
    namespace: droid-dev
    user: minikube
  name: local-droid-dev
- context:
    cluster: dev-team-cluster # These fields point to the clusters defined above
    namespace: droid-dev
    user: dev-team-cluster-admin # These fields point to the users defined below
  name: cloud-droid-dev
- context:
    cluster: dev-team-cluster
    namespace: droid-prod
    user: dev-team-cluster-admin
  name: cloud-droid-prod

current-context: minikube # This is the current context. It can be set using 'kubectl config set current-context <context name>'
kind: Config
preferences: {}

users:
- name: dev-team-cluster-admin # Can be anything. This is used by the contexts defined above to select which user to access a cluster with.
  user:
    # Credentials can be obtained from the cloud provider
    client-certificate-data: SSH key
    client-key-data: SSH key.
- name: minikube
  user:
    client-certificate: /home/loratech/.minikube/profiles/minikube/client.crt
    client-key: /home/loratech/.minikube/profiles/minikube/client.key
